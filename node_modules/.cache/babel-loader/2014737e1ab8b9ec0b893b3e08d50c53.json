{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sebon\\\\\\uC18C\\uC218\\uC804\\uACF5\\\\project\\\\book\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { blogSearch } from \"./api\";\nimport \"./App.css\";\nimport item from \"./item\";\n\nconst App = props => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    if (query.length > 0) {\n      blogSearchHttpHandler(query, true);\n    }\n  }, [query]); // 엔터를 눌렀을 때 호출 되는 함수\n\n  const onEnter = e => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  }; // text 검색어가 바뀔 때 호출되는 함수.\n\n\n  const onTextUpdate = e => {\n    setText(e.target.value);\n  };\n\n  const blogSearchHttpHandler = async (query, reset) => {\n    const params = {\n      query: query,\n      sort: \"accuracy\",\n      // accuracy | recency 정확도 or 최신\n      page: 1,\n      // 페이지번호\n      size: 10 // 한 페이지에 보여 질 문서의 개수\n\n    };\n    const {\n      data\n    } = await blogSearch(params);\n\n    if (reset) {\n      setBlogs(data.documents);\n    } else {\n      setBlogs(blogs.concat(data.documents));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825 \\uD558\\uC138\\uC694...\",\n      name: \"query\",\n      className: \"input_search\",\n      onKeyDown: onEnter // enter\n      ,\n      onChange: onTextUpdate // change\n      ,\n      value: text // view\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"item\", {\n        thumbnail: blog.thumbnail,\n        title: blog.title,\n        blogname: blog.blogname,\n        contents: blog.contents,\n        url: blog.url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Um3hxUTk6BVA2LLH6OSS64gE/tk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sebon/소수전공/project/book/src/App.js"],"names":["React","useEffect","useState","blogSearch","item","App","props","blogs","setBlogs","text","setText","query","setQuery","length","blogSearchHttpHandler","onEnter","e","keyCode","onTextUpdate","target","value","reset","params","sort","page","size","data","documents","concat","map","blog","index","thumbnail","title","blogname","contents","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,qBAAqB,CAACH,KAAD,EAAQ,IAAR,CAArB;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT,CALmB,CAWnB;;AACA,QAAMI,OAAO,GAAGC,CAAC,IAAI;AACnB,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBL,MAAAA,QAAQ,CAACH,IAAD,CAAR;AACD;AACF,GAJD,CAZmB,CAkBnB;;;AACA,QAAMS,YAAY,GAAGF,CAAC,IAAI;AACxBN,IAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMN,qBAAqB,GAAG,OAAOH,KAAP,EAAcU,KAAd,KAAwB;AACpD,UAAMC,MAAM,GAAG;AACbX,MAAAA,KAAK,EAAEA,KADM;AAEbY,MAAAA,IAAI,EAAE,UAFO;AAEK;AAClBC,MAAAA,IAAI,EAAE,CAHO;AAGJ;AACTC,MAAAA,IAAI,EAAE,EAJO,CAIJ;;AAJI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMvB,UAAU,CAACmB,MAAD,CAAjC;;AACA,QAAID,KAAJ,EAAW;AACTb,MAAAA,QAAQ,CAACkB,IAAI,CAACC,SAAN,CAAR;AACD,KAFD,MAEO;AACLnB,MAAAA,QAAQ,CAACD,KAAK,CAACqB,MAAN,CAAaF,IAAI,CAACC,SAAlB,CAAD,CAAR;AACD;AACF,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,6DAFd;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,SAAS,EAAEZ,OALb,CAKsB;AALtB;AAME,MAAA,QAAQ,EAAEG,YANZ,CAM0B;AAN1B;AAOE,MAAA,KAAK,EAAET,IAPT,CAOe;;AAPf;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,gBACGF,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT;AAEE,QAAA,SAAS,EAAED,IAAI,CAACE,SAFlB;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,QAAA,QAAQ,EAAEH,IAAI,CAACI,QAJjB;AAKE,QAAA,QAAQ,EAAEJ,IAAI,CAACK,QALjB;AAME,QAAA,GAAG,EAAEL,IAAI,CAACM;AANZ,SACOL,KADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAjED;;GAAM1B,G;;KAAAA,G;AAmEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { blogSearch } from \"./api\";\n\nimport \"./App.css\";\nimport item from \"./item\";\n\nconst App = props => {\n  const [blogs, setBlogs] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    if (query.length > 0) {\n      blogSearchHttpHandler(query, true);\n    }\n  }, [query]);\n\n  // 엔터를 눌렀을 때 호출 되는 함수\n  const onEnter = e => {\n    if (e.keyCode === 13) {\n      setQuery(text);\n    }\n  };\n\n  // text 검색어가 바뀔 때 호출되는 함수.\n  const onTextUpdate = e => {\n    setText(e.target.value);\n  };\n\n  const blogSearchHttpHandler = async (query, reset) => {\n    const params = {\n      query: query,\n      sort: \"accuracy\", // accuracy | recency 정확도 or 최신\n      page: 1, // 페이지번호\n      size: 10 // 한 페이지에 보여 질 문서의 개수\n    };\n\n    const { data } = await blogSearch(params);\n    if (reset) {\n      setBlogs(data.documents);\n    } else {\n      setBlogs(blogs.concat(data.documents));\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"search\"\n        placeholder=\"검색어를 입력 하세요...\"\n        name=\"query\"\n        className=\"input_search\"\n        onKeyDown={onEnter} // enter\n        onChange={onTextUpdate} // change\n        value={text} // view\n      />\n\n      <ul>\n        {blogs.map((blog, index) => (\n          <item\n            key={index}\n            thumbnail={blog.thumbnail}\n            title={blog.title}\n            blogname={blog.blogname}\n            contents={blog.contents}\n            url={blog.url}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}